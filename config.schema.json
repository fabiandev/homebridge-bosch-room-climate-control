{
    "pluginAlias": "BoschRoomClimateControl",
    "pluginType": "platform",
    "singular": true,
    "headerDisplay": "Control multiple Bosch Smart Home devices through room climate control of the BSHC API. Visit the repository readme for more information: https://github.com/fabiandev/homebridge-bosch-room-climate-control",
    "schema": {
        "type": "object",
        "properties": {
            "host": {
                "title": "Host",
                "description": "The host name / IP Address of BSHC (e.g. 192.168.0.10)",
                "type": "string",
                "required": true
            },
            "clientName": {
                "title": "Client name",
                "description": "The name for the homebridge client that is shown in the Bosch Smart Home app ('OSS ' prefix is added automatically)",
                "type": "string",
                "required": false,
                "default": "Homebridge Room Climate Control"
            },
            "systemPassword": {
                "title": "System password (plain text, only needed for pairing)",
                "description": "The system password of your Bosch Smart Home Controller (BSHC)",
                "type": "string",
                "required": false
            },
            "clientId": {
                "title": "Client identifier",
                "description": "Generated automatically if not provided ('oss_' prefix is added automatically)",
                "type": "string",
                "required": false
            },
            "clientCert": {
                "title": "Client certificate (base64 encoded content only without BEGIN/END)",
                "description": "Generated automatically if possoble, unless provided here",
                "type": "string",
                "required": false
            },
            "clientKey": {
                "title": "Client private key (base64 encoded content only without BEGIN/END, 2048bit)",
                "description": "Generated automatically if possible, unless provided here",
                "type": "string",
                "required": false
            },
            "periodicUpdates": {
                "title": "Refresh the accessory state after a specified amount of minutes (0 or lower = disabled)",
                "description": "The plugin reacts to changes of accessories, a periodic refresh is not required and does not disable event based updates through long polling",
                "type": "number",
                "default": 5,
                "required": false
            },
            "accessoryUpdates": {
                "title": "Fetch devices and handle removed and added devices",
                "description": "Fetch devices and handle removed and added devices. Without this being enabled, the plugin needs to be restarted to update accessories from the API.",
                "type": "number",
                "default": 15,
                "required": false
            }
        }
    },
    "form": null,
    "display": null
}